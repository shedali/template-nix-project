name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v26
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

    - name: Setup Cachix
      uses: cachix/cachix-action@v14
      with:
        name: bun-nix-example
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        extraPullNames: nix-community

    - name: Check flake
      run: nix flake check

    - name: Build application
      run: nix build -L

    - name: Build script variant
      run: nix build .#script -L

    - name: Test run application
      run: |
        timeout 10s nix run &
        sleep 5
        curl -f http://localhost:3000 || exit 1

    - name: Test development shell
      run: nix develop --command bash -c "which bun && bun --version"

  format-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Nix
      uses: cachix/install-nix-action@v26
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
        extra_nix_config: |
          experimental-features = nix-command flakes

    - name: Check Nix formatting
      run: |
        nix fmt
        git diff --exit-code || (echo "Nix files need formatting. Run 'nix fmt'" && exit 1)