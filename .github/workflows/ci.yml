name: "CI"

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    # Fix for macOS runner issues
    - name: Clean pre-existing Nix state
      if: matrix.os == 'macos-latest'
      run: |
        # Remove existing Nix users that conflict
        for i in $(seq 1 32); do
          sudo dscl . -delete /Users/_nixbld$i 2>/dev/null || true
        done
        sudo dscl . -delete /Groups/nixbld 2>/dev/null || true
    
    - uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
    
    - uses: cachix/cachix-action@v14
      with:
        name: shedali
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    
    - name: Check flake
      run: nix flake check
    
    - name: Build application
      run: nix build -L
    
    - name: Build script variant  
      run: nix build .#script -L
    
    - name: Test development shell
      run: nix develop --command bash -c "which bun && bun --version"

  format-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
    
    - name: Check Nix formatting
      run: |
        nix fmt
        git diff --exit-code || (echo "Nix files need formatting. Run 'nix fmt'" && exit 1)