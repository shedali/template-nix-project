name: "CI"

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    # Step 1: Use faster Nix installer
    - uses: DeterminateSystems/nix-installer-action@v4
    
    - uses: DeterminateSystems/magic-nix-cache-action@v2
    
    # Step 4: Cache Nix store between runs
    - name: Cache Nix store
      uses: actions/cache@v4
      with:
        path: /nix
        key: ${{ runner.os }}-nix-${{ hashFiles('flake.lock') }}
        restore-keys: |
          ${{ runner.os }}-nix-
    
    # CI only READS from cache, doesn't write
    # No signingKey = read-only mode
    - uses: cachix/cachix-action@v14
      with:
        name: shedali
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        extraPullNames: nix-community
        # No signingKey here - read only!
    
    # Step 3: Run builds in parallel
    - name: Run all checks and builds in parallel
      run: |
        echo "Starting parallel builds..."
        
        # Run flake check in background
        nix flake check &
        CHECK_PID=$!
        
        # Build React app (default is same as react, so skip duplicate)
        nix build .#react -L &
        REACT_PID=$!
        
        # Build server
        nix build .#server -L &
        SERVER_PID=$!
        
        # Build script variant
        nix build .#script -L &
        SCRIPT_PID=$!
        
        # Wait for all background jobs to complete
        wait $CHECK_PID
        echo "✓ Flake check completed"
        
        wait $REACT_PID
        echo "✓ React build completed"
        
        wait $SERVER_PID
        echo "✓ Server build completed"
        
        wait $SCRIPT_PID
        echo "✓ Script build completed"
    
    - name: Test development shell
      run: nix develop --command echo "Dev shell works"

  format-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    # Use faster Nix installer here too
    - uses: DeterminateSystems/nix-installer-action@v4
    
    - name: Check Nix formatting
      run: |
        nix fmt -- --check || (echo "Nix files need formatting. Run 'nix fmt'" && exit 1)