name: "CI"

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    
    - name: Cache Bun dependencies
      uses: actions/cache@v4
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-
    
    # Note: We don't install dependencies here since Nix build doesn't use them
    
    - uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    
    # CI only READS from cache, doesn't write
    # No signingKey = read-only mode
    - uses: cachix/cachix-action@v14
      with:
        name: shedali
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        extraPullNames: nix-community
        # No signingKey here - read only!
    
    - name: Check flake
      run: nix flake check
    
    - name: Build application
      run: nix build -L
    
    - name: Build script variant  
      run: nix build .#script -L
    
    - name: Build React app
      run: nix build .#react -L
    
    - name: Test development shell
      run: nix develop --command bash -c "which bun && bun --version"
    
    - name: Run pre-commit checks
      run: nix develop --command pre-commit-run || true

  format-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Check Nix formatting
      run: |
        nix fmt
        git diff --exit-code || (echo "Nix files need formatting. Run 'nix fmt'" && exit 1)