name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Nix
      uses: DeterminateSystems/nix-installer-action@v4
      with:
        extra-conf: |
          extra-substituters = https://cache.nixos.org https://shedali.cachix.org
          extra-trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= shedali.cachix.org-1:jnKOvnLAPbsv127ddEfluQ5Wo8h7llUT47CUJCumAvI=
          max-jobs = auto
          cores = 0

    - name: Cache Nix store paths
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/nix
          /nix/var/nix/profiles
          /nix/var/nix/gcroots
        key: nix-${{ runner.os }}-${{ hashFiles('flake.lock', '**/*.nix') }}
        restore-keys: |
          nix-${{ runner.os }}-${{ hashFiles('flake.lock') }}
          nix-${{ runner.os }}-

    - name: Setup Cachix
      uses: cachix/cachix-action@v14
      with:
        name: shedali
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Build React App
      run: |
        echo "Building React app for GitHub Pages..."
        nix build .#react -L
        
    - name: Prepare Pages artifact
      run: |
        # Copy built site to a staging directory
        mkdir -p _site
        cp -r result/www/* _site/
        
        # Verify the build output
        echo "Built files:"
        find _site -type f | head -20
        
        # Check for required files
        if [ ! -f "_site/index.html" ]; then
          echo "Error: index.html not found in build output"
          exit 1
        fi
        
        echo "âœ… Site prepared for deployment"

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4