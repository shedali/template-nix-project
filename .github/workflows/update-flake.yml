name: Update Flake Lock

on:
  schedule:
    # Run weekly on Mondays at 3 AM UTC
    - cron: '0 3 * * 1'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@v4
      with:
        extra-conf: |
          substituters = https://cache.nixos.org https://shedali.cachix.org
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= shedali.cachix.org-1:jnKOvnLAPbsv127ddEfluQ5Wo8h7llUT47CUJCumAvI=
    
    - name: Update flake.lock
      id: update
      run: |
        # Store current state
        cp flake.lock flake.lock.old
        
        # Update all inputs
        nix flake update
        
        # Check if there are changes
        if diff -q flake.lock flake.lock.old > /dev/null; then
          echo "has_changes=false" >> $GITHUB_OUTPUT
          echo "No updates available"
        else
          echo "has_changes=true" >> $GITHUB_OUTPUT
          echo "Updates found!"
          
          # Generate detailed changelog
          echo "## ðŸ“¦ Dependency Updates" >> update-message.md
          echo "" >> update-message.md
          
          # Parse changes
          for input in $(nix flake metadata --json | jq -r '.locks.nodes | keys[]' | grep -v root); do
            OLD_REV=$(jq -r ".nodes.\"$input\".locked.rev // \"N/A\"" flake.lock.old)
            NEW_REV=$(jq -r ".nodes.\"$input\".locked.rev // \"N/A\"" flake.lock)
            
            if [ "$OLD_REV" != "$NEW_REV" ] && [ "$OLD_REV" != "N/A" ]; then
              OLD_DATE=$(jq -r ".nodes.\"$input\".locked.lastModified // \"\"" flake.lock.old)
              NEW_DATE=$(jq -r ".nodes.\"$input\".locked.lastModified // \"\"" flake.lock)
              
              echo "### $input" >> update-message.md
              if [ -n "$OLD_DATE" ] && [ -n "$NEW_DATE" ]; then
                OLD_DATE_FMT=$(date -d @$OLD_DATE '+%Y-%m-%d' 2>/dev/null || echo "unknown")
                NEW_DATE_FMT=$(date -d @$NEW_DATE '+%Y-%m-%d' 2>/dev/null || echo "unknown")
                echo "- ðŸ“… $OLD_DATE_FMT â†’ $NEW_DATE_FMT" >> update-message.md
              fi
              echo '- ðŸ”— `'${OLD_REV:0:7}'` â†’ `'${NEW_REV:0:7}'`' >> update-message.md
              
              # Try to get GitHub URL for changelog
              OWNER=$(jq -r ".nodes.\"$input\".locked.owner // \"\"" flake.lock)
              REPO=$(jq -r ".nodes.\"$input\".locked.repo // \"\"" flake.lock)
              if [ -n "$OWNER" ] && [ -n "$REPO" ]; then
                echo "- [View changes](https://github.com/$OWNER/$REPO/compare/${OLD_REV:0:7}...${NEW_REV:0:7})" >> update-message.md
              fi
              echo "" >> update-message.md
            fi
          done
          
          echo "### Summary" >> update-message.md
          echo '```diff' >> update-message.md
          diff -u flake.lock.old flake.lock | tail -n +4 | head -50 >> update-message.md || true
          echo '```' >> update-message.md
        fi
    
    - name: Test build with updates
      if: steps.update.outputs.has_changes == 'true'
      run: |
        echo "ðŸ§ª Testing build with updates..."
        nix build -L
        nix flake check -L
        echo "âœ… All checks passed!"
    
    - name: Create Pull Request
      if: steps.update.outputs.has_changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: |
          chore(deps): update flake.lock
          
          Weekly automated dependency update
        branch: flake-update/weekly
        delete-branch: true
        title: "chore(deps): weekly flake.lock update"
        body-path: update-message.md
        labels: |
          dependencies
          automated
        assignees: ${{ github.repository_owner }}
        reviewers: ${{ github.repository_owner }}